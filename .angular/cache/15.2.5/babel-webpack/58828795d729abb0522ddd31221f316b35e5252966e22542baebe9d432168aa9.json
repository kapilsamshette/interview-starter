{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatFormFieldModule } from '@angular/material/form-field';\n// import { MatExpansionModule } from '@angular/material/expansion';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatSelectModule } from '@angular/material/select';\nimport { animate, state, style, transition, trigger } from '@angular/animations';\nimport { HttpClientModule } from '@angular/common/http';\nimport { UsersService } from './users.service';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { Validators, ReactiveFormsModule } from '@angular/forms';\nlet UsersComponent = class UsersComponent {\n  constructor(userService, fb) {\n    this.userService = userService;\n    this.fb = fb;\n    this.dataSource = [];\n    this.columnsToDisplay = ['id', 'firstName', 'lastName', 'maidenName', 'age', 'gender'];\n    this.columnsToDisplayWithExpand = [...this.columnsToDisplay, 'expand'];\n    this.expandedElement = {};\n    this.ngUnSubscribe = new Subject();\n    this.existingUserData = {};\n    this.loading = false;\n    this.userForm = this.fb.group({\n      id: [''],\n      firstName: [''],\n      lastName: [''],\n      maidenName: [''],\n      age: ['', Validators.pattern(/^[0-9]\\d*$/)],\n      gender: ['']\n    });\n  }\n  ngOnInit() {\n    this.userService.getUsersList().pipe(takeUntil(this.ngUnSubscribe)).subscribe(data => {\n      this.dataSource = data.users;\n      console.log(this.dataSource);\n    });\n  }\n  editForm(element) {\n    this.loading = false;\n    this.existingUserData = element;\n    this.userForm.patchValue({\n      id: element.id,\n      firstName: element.firstName,\n      lastName: element.lastName,\n      age: element.age,\n      gender: element.gender,\n      maidenName: element.maidenName\n    });\n  }\n  SaveUser() {\n    this.loading = true;\n    this.existingUserData.firstName = this.userForm.value.firstName;\n    this.existingUserData.lastName = this.userForm.value.lastName;\n    this.existingUserData.maidenName = this.userForm.value.maidenName;\n    this.existingUserData.age = this.userForm.value.age;\n    this.existingUserData.gender = this.userForm.value.gender;\n    this.userService.putUserData(this.existingUserData).pipe(takeUntil(this.ngUnSubscribe)).subscribe(data => {});\n    const index = this.dataSource.findIndex(e => e.id == this.userForm.value.id);\n    setTimeout(() => {\n      this.dataSource[index] = this.existingUserData;\n      this.loading = false;\n    }, 1000);\n  }\n  ngOnDestroy() {\n    this.ngUnSubscribe.next(0);\n    this.ngUnSubscribe.complete();\n  }\n};\nUsersComponent = __decorate([Component({\n  selector: 'app-users',\n  standalone: true,\n  imports: [CommonModule, ReactiveFormsModule, HttpClientModule, MatFormFieldModule, MatInputModule, MatIconModule, MatTableModule, MatSelectModule],\n  providers: [UsersService],\n  templateUrl: './users.component.html',\n  styleUrls: ['./users.component.scss'],\n  animations: [trigger('detailExpand', [state('collapsed', style({\n    height: '0px',\n    minHeight: '0'\n  })), state('expanded', style({\n    height: '*'\n  })), transition('expanded <=> collapsed', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)'))])]\n})], UsersComponent);\nexport { UsersComponent };","map":{"version":3,"mappings":"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","names":["Component","CommonModule","MatFormFieldModule","MatInputModule","MatIconModule","MatTableModule","MatSelectModule","animate","state","style","transition","trigger","HttpClientModule","UsersService","Subject","takeUntil","Validators","ReactiveFormsModule","UsersComponent","constructor","userService","fb","columnsToDisplay","userForm","group","id","firstName","lastName","maidenName","age","pattern","gender","ngOnInit","getUsersList","pipe","ngUnSubscribe","subscribe","data","dataSource","users","console","log","editForm","element","loading","existingUserData","patchValue","SaveUser","value","putUserData","index","findIndex","e","setTimeout","ngOnDestroy","next","complete","selector","standalone","imports","providers","templateUrl","styleUrls","animations","height","minHeight"],"sourceRoot":"","sources":["C:\\Users\\kapil\\Angular Projects\\interview-starter\\src\\app\\_pages\\users\\users.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatFormFieldModule } from '@angular/material/form-field';\n// import { MatExpansionModule } from '@angular/material/expansion';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatSelectModule } from '@angular/material/select';\nimport { animate, state, style, transition, trigger } from '@angular/animations';\nimport { HttpClientModule } from '@angular/common/http';\nimport { UsersService } from './users.service'; \nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { FormGroup, FormBuilder, Validators, ReactiveFormsModule } from '@angular/forms';\n\n@Component({\n  selector: 'app-users',\n  standalone: true,\n  imports: [CommonModule,ReactiveFormsModule, HttpClientModule, MatFormFieldModule, MatInputModule, MatIconModule, MatTableModule, MatSelectModule],\n  providers:[UsersService],\n  templateUrl: './users.component.html',\n  styleUrls: ['./users.component.scss'],\n  animations: [\n    trigger('detailExpand', [\n      state('collapsed', style({height: '0px', minHeight: '0'})),\n      state('expanded', style({height: '*'})),\n      transition('expanded <=> collapsed', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)')),\n    ]),\n  ],\n\n})\nexport class UsersComponent {\n  dataSource = <IUser[]>[];\n  columnsToDisplay = ['id','firstName', 'lastName', 'maidenName', 'age', 'gender' ];\n  columnsToDisplayWithExpand = [...this.columnsToDisplay, 'expand'];\n  expandedElement: IUser | null = <IUser>{};\n  ngUnSubscribe = new Subject();\n  userForm:FormGroup;\n  existingUserData:IUser = <IUser>{}\n  loading = false;\n\n  constructor(private userService:UsersService, private fb:FormBuilder) {\n    this.userForm = this.fb.group({\n      id:[''],\n      firstName:[''],\n      lastName: [''], \n      maidenName:[''], \n      age:['', Validators.pattern(/^[0-9]\\d*$/)],\n      gender: [''], \n      \n    });\n  }\n\n  ngOnInit() {\n    this.userService.getUsersList().pipe(takeUntil(this.ngUnSubscribe)).subscribe(data=>{\n      this.dataSource = data.users;\n      console.log(this.dataSource)\n    })\n  }\n\n  editForm(element:IUser) {\n    this.loading = false;\n    this.existingUserData = element;\n    this.userForm.patchValue({\n      id:element.id,\n      firstName:element.firstName,\n      lastName:element.lastName,\n      age:element.age,\n      gender:element.gender,\n      maidenName:element.maidenName,\n    })\n  }\n\n  SaveUser() {\n    this.loading = true;\n    this.existingUserData.firstName = this.userForm.value.firstName;\n    this.existingUserData.lastName = this.userForm.value.lastName;\n    this.existingUserData.maidenName = this.userForm.value.maidenName;\n    this.existingUserData.age = this.userForm.value.age;\n    this.existingUserData.gender = this.userForm.value.gender;\n    this.userService.putUserData(this.existingUserData).pipe(takeUntil(this.ngUnSubscribe)).subscribe(data=>{})\n    const index = this.dataSource.findIndex(e=>e.id== this.userForm.value.id);\n    setTimeout(()=>{\n      this.dataSource[index] = this.existingUserData;\n      this.loading = false;\n    }, 1000);\n  }\n\n  ngOnDestroy() {\n    this.ngUnSubscribe.next(0);\n    this.ngUnSubscribe.complete();\n  }\n}\n\nexport interface IUserList {\n  users:IUser[],\n  limit:number,\n  total:number,\n  skip:number,\n}\n\nexport interface IUser {\n  id?: number;\n  firstName?: string;\n  lastName?: string;\n  maidenName?: string;\n  age?: number;\n  gender?: string;\n  email?:string,\n  phone?:string,\n  username?:string,\n  password?:string,\n  birthDate?:Date,\n  image?:string,\n  bloodGroup?:string,\n  height?:number,\n  weight?:number,\n  eyeColor?:string,\n  hair?:{\n    color?:string,\n    type?:string\n  },\n  domain?:string,\n  ip?:string,\n  address?:{\n    address?:string,\n    city?:string,\n    coordinates?:{\n      lat?:number,\n      lng?:number\n    },\n    postalCode?:string,\n    state?:string\n  },\n  macAddress?:string,\n  university?:string,\n  bank?:{\n    cardExpire?:string,\n    cardNumber?:string,\n    cardType?:string,\n    currency?:string,\n    iban?:string\n  },\n  company?:{\n    address?:{\n      address?:string,\n      city?:string,\n      coordinates?:{\n        lat?:number,\n        lng?:number\n      },\n      postalCode?:string,\n      state?:string\n    },\n    department?:string,\n    name?:string,\n    title?:string\n  },\n  ein?:string,\n  ssn?:string,\n  userAgent?:string\n}\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}